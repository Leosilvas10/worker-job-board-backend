"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/hooks/useJobStats.js":
/*!**********************************!*\
  !*** ./src/hooks/useJobStats.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useJobFormatting: () => (/* binding */ useJobFormatting),\n/* harmony export */   useJobStats: () => (/* binding */ useJobStats)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useJobStats = ()=>{\n    _s();\n    const [stats, setStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        totalJobs: 0,\n        newJobsToday: 0,\n        companies: 0,\n        applicants: 0\n    });\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const hasLoaded = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useJobStats.useEffect\": ()=>{\n            // Evitar múltiplas chamadas\n            if (hasLoaded.current) return;\n            const fetchStats = {\n                \"useJobStats.useEffect.fetchStats\": async ()=>{\n                    try {\n                        console.log('📊 Buscando estatísticas reais das vagas...');\n                        const response = await fetch('/api/jobs-stats/');\n                        if (response.ok) {\n                            const data = await response.json();\n                            setStats({\n                                totalJobs: data.total || 0,\n                                newJobsToday: data.newToday || 0,\n                                companies: data.companies || 0,\n                                applicants: data.applicants || 0\n                            });\n                            console.log('✅ Estatísticas calculadas:', data.total, 'vagas totais');\n                            hasLoaded.current = true;\n                        }\n                    } catch (error) {\n                        console.error('❌ Erro ao buscar estatísticas:', error);\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"useJobStats.useEffect.fetchStats\"];\n            fetchStats();\n        }\n    }[\"useJobStats.useEffect\"], []);\n    return {\n        stats,\n        loading\n    };\n};\n_s(useJobStats, \"UFyp0NLIMK6pPuCNgtIQN6J5AZA=\");\n// Hook para formatação de números específico para vagas\nconst useJobFormatting = ()=>{\n    const formatJobCount = (count)=>{\n        if (count >= 1000) {\n            return \"\".concat((count / 1000).toFixed(1), \"k+\");\n        }\n        return count.toLocaleString('pt-BR');\n    };\n    const getCategoryDisplayName = (category)=>{\n        const displayNames = {\n            'domestica': 'Serviços Domésticos',\n            'porteiro': 'Segurança e Portaria',\n            'cuidador': 'Cuidados e Saúde',\n            'limpeza': 'Limpeza e Conservação',\n            'motorista': 'Transporte e Logística',\n            'vendedor': 'Vendas e Atendimento'\n        };\n        return displayNames[category] || category;\n    };\n    const getJobText = (count)=>{\n        if (count === 1) return 'vaga';\n        return 'vagas';\n    };\n    const formatCategoryCount = (category, count)=>{\n        return \"\".concat(formatJobCount(count), \" \").concat(getJobText(count));\n    };\n    return {\n        formatJobCount,\n        getCategoryDisplayName,\n        getJobText,\n        formatCategoryCount\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy9ob29rcy91c2VKb2JTdGF0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtRDtBQUU1QyxNQUFNRyxjQUFjOztJQUN6QixNQUFNLENBQUNDLE9BQU9DLFNBQVMsR0FBR0wsK0NBQVFBLENBQUM7UUFDakNNLFdBQVc7UUFDWEMsY0FBYztRQUNkQyxXQUFXO1FBQ1hDLFlBQVk7SUFDZDtJQUNBLE1BQU0sQ0FBQ0MsU0FBU0MsV0FBVyxHQUFHWCwrQ0FBUUEsQ0FBQztJQUN2QyxNQUFNWSxZQUFZViw2Q0FBTUEsQ0FBQztJQUV6QkQsZ0RBQVNBO2lDQUFDO1lBQ1IsNEJBQTRCO1lBQzVCLElBQUlXLFVBQVVDLE9BQU8sRUFBRTtZQUV2QixNQUFNQztvREFBYTtvQkFDakIsSUFBSTt3QkFDRkMsUUFBUUMsR0FBRyxDQUFDO3dCQUVaLE1BQU1DLFdBQVcsTUFBTUMsTUFBTTt3QkFDN0IsSUFBSUQsU0FBU0UsRUFBRSxFQUFFOzRCQUNmLE1BQU1DLE9BQU8sTUFBTUgsU0FBU0ksSUFBSTs0QkFDaENoQixTQUFTO2dDQUNQQyxXQUFXYyxLQUFLRSxLQUFLLElBQUk7Z0NBQ3pCZixjQUFjYSxLQUFLRyxRQUFRLElBQUk7Z0NBQy9CZixXQUFXWSxLQUFLWixTQUFTLElBQUk7Z0NBQzdCQyxZQUFZVyxLQUFLWCxVQUFVLElBQUk7NEJBQ2pDOzRCQUNBTSxRQUFRQyxHQUFHLENBQUMsOEJBQThCSSxLQUFLRSxLQUFLLEVBQUU7NEJBQ3REVixVQUFVQyxPQUFPLEdBQUc7d0JBQ3RCO29CQUNGLEVBQUUsT0FBT1csT0FBTzt3QkFDZFQsUUFBUVMsS0FBSyxDQUFDLGtDQUFrQ0E7b0JBQ2xELFNBQVU7d0JBQ1JiLFdBQVc7b0JBQ2I7Z0JBQ0Y7O1lBRUFHO1FBQ0Y7Z0NBQUcsRUFBRTtJQUVMLE9BQU87UUFBRVY7UUFBT007SUFBUTtBQUMxQixFQUFDO0dBekNZUDtBQTJDYix3REFBd0Q7QUFDakQsTUFBTXNCLG1CQUFtQjtJQUM5QixNQUFNQyxpQkFBaUIsQ0FBQ0M7UUFDdEIsSUFBSUEsU0FBUyxNQUFNO1lBQ2pCLE9BQU8sR0FBNkIsT0FBMUIsQ0FBQ0EsUUFBUSxJQUFHLEVBQUdDLE9BQU8sQ0FBQyxJQUFHO1FBQ3RDO1FBQ0EsT0FBT0QsTUFBTUUsY0FBYyxDQUFDO0lBQzlCO0lBRUEsTUFBTUMseUJBQXlCLENBQUNDO1FBQzlCLE1BQU1DLGVBQWU7WUFDbkIsYUFBYTtZQUNiLFlBQVk7WUFDWixZQUFZO1lBQ1osV0FBVztZQUNYLGFBQWE7WUFDYixZQUFZO1FBQ2Q7UUFDQSxPQUFPQSxZQUFZLENBQUNELFNBQVMsSUFBSUE7SUFDbkM7SUFFQSxNQUFNRSxhQUFhLENBQUNOO1FBQ2xCLElBQUlBLFVBQVUsR0FBRyxPQUFPO1FBQ3hCLE9BQU87SUFDVDtJQUVBLE1BQU1PLHNCQUFzQixDQUFDSCxVQUFVSjtRQUNyQyxPQUFPLEdBQTRCTSxPQUF6QlAsZUFBZUMsUUFBTyxLQUFxQixPQUFsQk0sV0FBV047SUFDaEQ7SUFFQSxPQUFPO1FBQ0xEO1FBQ0FJO1FBQ0FHO1FBQ0FDO0lBQ0Y7QUFDRixFQUFDIiwic291cmNlcyI6WyIvaG9tZS9ydW5uZXIvd29ya3NwYWNlL3NyYy9ob29rcy91c2VKb2JTdGF0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCdcblxuZXhwb3J0IGNvbnN0IHVzZUpvYlN0YXRzID0gKCkgPT4ge1xuICBjb25zdCBbc3RhdHMsIHNldFN0YXRzXSA9IHVzZVN0YXRlKHtcbiAgICB0b3RhbEpvYnM6IDAsXG4gICAgbmV3Sm9ic1RvZGF5OiAwLFxuICAgIGNvbXBhbmllczogMCxcbiAgICBhcHBsaWNhbnRzOiAwXG4gIH0pXG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpXG4gIGNvbnN0IGhhc0xvYWRlZCA9IHVzZVJlZihmYWxzZSlcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIEV2aXRhciBtw7psdGlwbGFzIGNoYW1hZGFzXG4gICAgaWYgKGhhc0xvYWRlZC5jdXJyZW50KSByZXR1cm5cblxuICAgIGNvbnN0IGZldGNoU3RhdHMgPSBhc3luYyAoKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zb2xlLmxvZygn8J+TiiBCdXNjYW5kbyBlc3RhdMOtc3RpY2FzIHJlYWlzIGRhcyB2YWdhcy4uLicpXG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9qb2JzLXN0YXRzLycpXG4gICAgICAgIGlmIChyZXNwb25zZS5vaykge1xuICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKClcbiAgICAgICAgICBzZXRTdGF0cyh7XG4gICAgICAgICAgICB0b3RhbEpvYnM6IGRhdGEudG90YWwgfHwgMCxcbiAgICAgICAgICAgIG5ld0pvYnNUb2RheTogZGF0YS5uZXdUb2RheSB8fCAwLFxuICAgICAgICAgICAgY29tcGFuaWVzOiBkYXRhLmNvbXBhbmllcyB8fCAwLFxuICAgICAgICAgICAgYXBwbGljYW50czogZGF0YS5hcHBsaWNhbnRzIHx8IDBcbiAgICAgICAgICB9KVxuICAgICAgICAgIGNvbnNvbGUubG9nKCfinIUgRXN0YXTDrXN0aWNhcyBjYWxjdWxhZGFzOicsIGRhdGEudG90YWwsICd2YWdhcyB0b3RhaXMnKVxuICAgICAgICAgIGhhc0xvYWRlZC5jdXJyZW50ID0gdHJ1ZVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCfinYwgRXJybyBhbyBidXNjYXIgZXN0YXTDrXN0aWNhczonLCBlcnJvcilcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpXG4gICAgICB9XG4gICAgfVxuXG4gICAgZmV0Y2hTdGF0cygpXG4gIH0sIFtdKVxuXG4gIHJldHVybiB7IHN0YXRzLCBsb2FkaW5nIH1cbn1cblxuLy8gSG9vayBwYXJhIGZvcm1hdGHDp8OjbyBkZSBuw7ptZXJvcyBlc3BlY8OtZmljbyBwYXJhIHZhZ2FzXG5leHBvcnQgY29uc3QgdXNlSm9iRm9ybWF0dGluZyA9ICgpID0+IHtcbiAgY29uc3QgZm9ybWF0Sm9iQ291bnQgPSAoY291bnQpID0+IHtcbiAgICBpZiAoY291bnQgPj0gMTAwMCkge1xuICAgICAgcmV0dXJuIGAkeyhjb3VudCAvIDEwMDApLnRvRml4ZWQoMSl9aytgXG4gICAgfVxuICAgIHJldHVybiBjb3VudC50b0xvY2FsZVN0cmluZygncHQtQlInKVxuICB9XG5cbiAgY29uc3QgZ2V0Q2F0ZWdvcnlEaXNwbGF5TmFtZSA9IChjYXRlZ29yeSkgPT4ge1xuICAgIGNvbnN0IGRpc3BsYXlOYW1lcyA9IHtcbiAgICAgICdkb21lc3RpY2EnOiAnU2VydmnDp29zIERvbcOpc3RpY29zJyxcbiAgICAgICdwb3J0ZWlybyc6ICdTZWd1cmFuw6dhIGUgUG9ydGFyaWEnLFxuICAgICAgJ2N1aWRhZG9yJzogJ0N1aWRhZG9zIGUgU2HDumRlJyxcbiAgICAgICdsaW1wZXphJzogJ0xpbXBlemEgZSBDb25zZXJ2YcOnw6NvJyxcbiAgICAgICdtb3RvcmlzdGEnOiAnVHJhbnNwb3J0ZSBlIExvZ8Otc3RpY2EnLFxuICAgICAgJ3ZlbmRlZG9yJzogJ1ZlbmRhcyBlIEF0ZW5kaW1lbnRvJyxcbiAgICB9XG4gICAgcmV0dXJuIGRpc3BsYXlOYW1lc1tjYXRlZ29yeV0gfHwgY2F0ZWdvcnlcbiAgfVxuXG4gIGNvbnN0IGdldEpvYlRleHQgPSAoY291bnQpID0+IHtcbiAgICBpZiAoY291bnQgPT09IDEpIHJldHVybiAndmFnYSdcbiAgICByZXR1cm4gJ3ZhZ2FzJ1xuICB9XG5cbiAgY29uc3QgZm9ybWF0Q2F0ZWdvcnlDb3VudCA9IChjYXRlZ29yeSwgY291bnQpID0+IHtcbiAgICByZXR1cm4gYCR7Zm9ybWF0Sm9iQ291bnQoY291bnQpfSAke2dldEpvYlRleHQoY291bnQpfWBcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZm9ybWF0Sm9iQ291bnQsXG4gICAgZ2V0Q2F0ZWdvcnlEaXNwbGF5TmFtZSxcbiAgICBnZXRKb2JUZXh0LFxuICAgIGZvcm1hdENhdGVnb3J5Q291bnRcbiAgfVxufSJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZUpvYlN0YXRzIiwic3RhdHMiLCJzZXRTdGF0cyIsInRvdGFsSm9icyIsIm5ld0pvYnNUb2RheSIsImNvbXBhbmllcyIsImFwcGxpY2FudHMiLCJsb2FkaW5nIiwic2V0TG9hZGluZyIsImhhc0xvYWRlZCIsImN1cnJlbnQiLCJmZXRjaFN0YXRzIiwiY29uc29sZSIsImxvZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsImRhdGEiLCJqc29uIiwidG90YWwiLCJuZXdUb2RheSIsImVycm9yIiwidXNlSm9iRm9ybWF0dGluZyIsImZvcm1hdEpvYkNvdW50IiwiY291bnQiLCJ0b0ZpeGVkIiwidG9Mb2NhbGVTdHJpbmciLCJnZXRDYXRlZ29yeURpc3BsYXlOYW1lIiwiY2F0ZWdvcnkiLCJkaXNwbGF5TmFtZXMiLCJnZXRKb2JUZXh0IiwiZm9ybWF0Q2F0ZWdvcnlDb3VudCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/hooks/useJobStats.js\n"));

/***/ })

});