"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/hooks/useJobStats.js":
/*!**********************************!*\
  !*** ./src/hooks/useJobStats.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useJobFormatting: () => (/* binding */ useJobFormatting),\n/* harmony export */   useJobStats: () => (/* binding */ useJobStats)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar _s = $RefreshSig$();\n\nconst useJobStats = ()=>{\n    _s();\n    const [stats, setStats] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        totalJobs: 0,\n        newJobsToday: 0,\n        companies: 0,\n        applicants: 0,\n        formatted: {\n            totalJobsFormatted: '0',\n            recentJobsFormatted: '0'\n        }\n    });\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const hasLoaded = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useJobStats.useEffect\": ()=>{\n            // Evitar múltiplas chamadas\n            if (hasLoaded.current) return;\n            const fetchStats = {\n                \"useJobStats.useEffect.fetchStats\": async ()=>{\n                    try {\n                        console.log('📊 Buscando estatísticas das vagas...');\n                        // Primeiro tentar buscar do nosso próprio endpoint local\n                        try {\n                            const localResponse = await fetch('/api/all-jobs-combined', {\n                                method: 'GET',\n                                headers: {\n                                    'Content-Type': 'application/json'\n                                }\n                            });\n                            if (localResponse.ok) {\n                                const localData = await localResponse.json();\n                                console.log('✅ Dados recebidos do endpoint local:', localData);\n                                const jobsArray = localData.jobs || localData.data || [];\n                                const totalJobs = jobsArray.length || localData.total || 0;\n                                const recentJobs = Math.floor(totalJobs * 0.15) // 15% como recentes\n                                ;\n                                const formattedStats = {\n                                    totalJobs: totalJobs,\n                                    newJobsToday: recentJobs,\n                                    companies: Math.floor(totalJobs * 0.6),\n                                    applicants: Math.floor(totalJobs * 8),\n                                    formatted: {\n                                        totalJobsFormatted: formatJobCount(totalJobs),\n                                        recentJobsFormatted: formatJobCount(recentJobs)\n                                    }\n                                };\n                                setStats(formattedStats);\n                                console.log('✅ Estatísticas calculadas do local:', formattedStats);\n                                hasLoaded.current = true;\n                                return;\n                            }\n                        } catch (localError) {\n                            console.log('⚠️ Endpoint local falhou, tentando backend externo:', localError.message);\n                        }\n                        // Se o local falhar, tentar o backend externo\n                        const BACKEND_URL = \"https://worker-job-board-backend-leonardosilvas2.replit.app\" || 0;\n                        console.log('📡 Tentando backend externo:', BACKEND_URL);\n                        const response = await fetch(\"\".concat(BACKEND_URL, \"/api/jobs\"), {\n                            method: 'GET',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'User-Agent': 'Frontend-Stats-API'\n                            },\n                            timeout: 8000 // 8 segundos de timeout\n                        });\n                        if (response.ok) {\n                            var _data_jobs;\n                            const data = await response.json();\n                            console.log('✅ Dados recebidos do backend externo:', data);\n                            const totalJobs = ((_data_jobs = data.jobs) === null || _data_jobs === void 0 ? void 0 : _data_jobs.length) || data.total || 0;\n                            const recentJobs = Math.floor(totalJobs * 0.15);\n                            const formattedStats = {\n                                totalJobs: totalJobs,\n                                newJobsToday: recentJobs,\n                                companies: Math.floor(totalJobs * 0.6),\n                                applicants: Math.floor(totalJobs * 8),\n                                formatted: {\n                                    totalJobsFormatted: formatJobCount(totalJobs),\n                                    recentJobsFormatted: formatJobCount(recentJobs)\n                                }\n                            };\n                            setStats(formattedStats);\n                            console.log('✅ Estatísticas calculadas do backend:', formattedStats);\n                            hasLoaded.current = true;\n                        } else {\n                            throw new Error(\"Backend retornou status \".concat(response.status));\n                        }\n                    } catch (error) {\n                        console.error('❌ Erro ao buscar estatísticas:', error);\n                        // Fallback com números padrão\n                        const fallbackStats = {\n                            totalJobs: 120,\n                            newJobsToday: 18,\n                            companies: 72,\n                            applicants: 960,\n                            formatted: {\n                                totalJobsFormatted: '120+',\n                                recentJobsFormatted: '18+'\n                            }\n                        };\n                        setStats(fallbackStats);\n                        console.log('🔄 Usando estatísticas de fallback:', fallbackStats);\n                        hasLoaded.current = true;\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"useJobStats.useEffect.fetchStats\"];\n            fetchStats();\n        }\n    }[\"useJobStats.useEffect\"], []);\n    return {\n        stats,\n        loading\n    };\n};\n_s(useJobStats, \"2QwVHBFICrn+h76SHhg1f8SdrrU=\");\n// Hook para formatação de números específico para vagas\nconst useJobFormatting = ()=>{\n    const formatJobCount = (count)=>{\n        if (count >= 1000) {\n            return \"\".concat((count / 1000).toFixed(1), \"k+\");\n        }\n        return \"\".concat(count, \"+\");\n    };\n    const getCategoryDisplayName = (category)=>{\n        const displayNames = {\n            'domestica': 'Serviços Domésticos',\n            'porteiro': 'Segurança e Portaria',\n            'cuidador': 'Cuidados e Saúde',\n            'limpeza': 'Limpeza e Conservação',\n            'motorista': 'Transporte e Logística',\n            'vendedor': 'Vendas e Atendimento'\n        };\n        return displayNames[category] || category;\n    };\n    const getJobText = (count)=>{\n        if (count === 1) return 'vaga';\n        return 'vagas';\n    };\n    const formatCategoryCount = (category, count)=>{\n        return \"\".concat(formatJobCount(count), \" \").concat(getJobText(count));\n    };\n    return {\n        formatJobCount,\n        getCategoryDisplayName,\n        getJobText,\n        formatCategoryCount\n    };\n};\n// Função helper para formatação (movida para fora do hook para reutilização)\nfunction formatJobCount(count) {\n    if (count >= 1000) {\n        return \"\".concat((count / 1000).toFixed(1), \"k+\");\n    }\n    return \"\".concat(count, \"+\");\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/hooks/useJobStats.js\n"));

/***/ })

});