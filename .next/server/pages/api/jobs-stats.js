"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/jobs-stats";
exports.ids = ["pages/api/jobs-stats"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fjobs-stats&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fjobs-stats.js&middlewareConfigBase64=e30%3D!":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fjobs-stats&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fjobs-stats.js&middlewareConfigBase64=e30%3D! ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_jobs_stats_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/jobs-stats.js */ \"(api-node)/./pages/api/jobs-stats.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_jobs_stats_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_jobs_stats_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/jobs-stats\",\n        pathname: \"/api/jobs-stats\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_jobs_stats_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGam9icy1zdGF0cyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGam9icy1zdGF0cy5qcyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDRTtBQUMxRDtBQUNzRDtBQUN0RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMscURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHFEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLHlHQUFtQjtBQUNsRDtBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXMvYXBpL2pvYnMtc3RhdHMuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2pvYnMtc3RhdHNcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9qb2JzLXN0YXRzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJ1xuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fjobs-stats&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fjobs-stats.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/jobs-stats.js":
/*!*********************************!*\
  !*** ./pages/api/jobs-stats.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// API para estat√≠sticas reais das vagas\nasync function handler(req, res) {\n    try {\n        console.log('üìä Buscando estat√≠sticas reais das vagas...');\n        if (req.method !== 'GET') {\n            return res.status(405).json({\n                success: false,\n                message: 'M√©todo n√£o permitido'\n            });\n        }\n        // Buscar todas as vagas combinadas com fallback\n        let allJobsData = {\n            success: false,\n            data: []\n        };\n        try {\n            const allJobsResponse = await fetch(`${req.headers.origin || 'http://localhost:3000'}/api/all-jobs-combined`);\n            if (allJobsResponse.ok) {\n                try {\n                    allJobsData = await allJobsResponse.json();\n                } catch (jsonError) {\n                    console.error('Erro ao parsear resposta da API de vagas:', jsonError);\n                }\n            }\n        } catch (fetchError) {\n            console.error('Erro ao buscar vagas:', fetchError);\n        }\n        // Se n√£o conseguiu buscar vagas, retornar estat√≠sticas padr√£o\n        if (!allJobsData.success || !allJobsData.data) {\n            return res.status(200).json({\n                success: true,\n                totalJobs: 347,\n                applications: 89,\n                inactiveJobs: 23,\n                activeJobs: 324,\n                categories: {\n                    'Empregos Simples': 156,\n                    'Tecnologia': 89,\n                    'Sa√∫de': 67,\n                    'Servi√ßos Gerais': 35\n                },\n                locations: {\n                    'S√£o Paulo, SP': 120,\n                    'Rio de Janeiro, RJ': 85,\n                    'Belo Horizonte, MG': 45,\n                    'Outras': 97\n                },\n                message: 'Estat√≠sticas simuladas - API de vagas indispon√≠vel'\n            });\n        }\n        const jobs = allJobsData.data;\n        const totalJobs = jobs.length;\n        // Contar vagas por categoria\n        const categoryCounts = {};\n        const locationCounts = {};\n        const salaryRanges = {};\n        const contractTypes = {};\n        jobs.forEach((job)=>{\n            // Categorias\n            if (job.category) {\n                categoryCounts[job.category] = (categoryCounts[job.category] || 0) + 1;\n            }\n            // Localiza√ß√µes\n            if (job.location) {\n                const location = job.location.toLowerCase();\n                locationCounts[location] = (locationCounts[location] || 0) + 1;\n            }\n            // Tipos de contrato\n            if (job.contractType) {\n                contractTypes[job.contractType] = (contractTypes[job.contractType] || 0) + 1;\n            }\n            // Faixas salariais (simplificada)\n            if (job.salary) {\n                const salaryText = job.salary.toLowerCase();\n                if (salaryText.includes('1.') || salaryText.includes('at√© 2000')) {\n                    salaryRanges['At√© R$ 2.000'] = (salaryRanges['At√© R$ 2.000'] || 0) + 1;\n                } else if (salaryText.includes('2.') || salaryText.includes('3.')) {\n                    salaryRanges['R$ 2.000 - R$ 4.000'] = (salaryRanges['R$ 2.000 - R$ 4.000'] || 0) + 1;\n                } else if (salaryText.includes('4.') || salaryText.includes('5.')) {\n                    salaryRanges['R$ 4.000 - R$ 6.000'] = (salaryRanges['R$ 4.000 - R$ 6.000'] || 0) + 1;\n                } else if (salaryText.includes('acima') || salaryText.includes('6.')) {\n                    salaryRanges['Acima de R$ 6.000'] = (salaryRanges['Acima de R$ 6.000'] || 0) + 1;\n                } else {\n                    salaryRanges['A combinar'] = (salaryRanges['A combinar'] || 0) + 1;\n                }\n            } else {\n                salaryRanges['A combinar'] = (salaryRanges['A combinar'] || 0) + 1;\n            }\n        });\n        // Mapear categorias para categorias padr√£o do site\n        const standardCategories = {\n            'Servi√ßos Dom√©sticos': (categoryCounts['domestica'] || 0) + (categoryCounts['cozinheira'] || 0) + (categoryCounts['baba'] || 0) + (categoryCounts['domestic'] || 0),\n            'Seguran√ßa e Portaria': (categoryCounts['porteiro'] || 0) + (categoryCounts['vigilante'] || 0) + (categoryCounts['security'] || 0) + (categoryCounts['recepcao'] || 0),\n            'Cuidados e Sa√∫de': (categoryCounts['cuidador'] || 0) + (categoryCounts['enfermagem'] || 0) + (categoryCounts['saude'] || 0) + (categoryCounts['acompanhante'] || 0),\n            'Limpeza e Conserva√ß√£o': (categoryCounts['limpeza'] || 0) + (categoryCounts['faxineira'] || 0) + (categoryCounts['conservacao'] || 0) + (categoryCounts['auxiliar-limpeza'] || 0),\n            'Transporte e Log√≠stica': (categoryCounts['motorista'] || 0) + (categoryCounts['entregador'] || 0) + (categoryCounts['logistica'] || 0) + (categoryCounts['transport'] || 0),\n            'Vendas e Atendimento': (categoryCounts['vendedor'] || 0) + (categoryCounts['atendente'] || 0) + (categoryCounts['vendas'] || 0) + (categoryCounts['comercial'] || 0)\n        };\n        // Calcular outras estat√≠sticas\n        const currentDate = new Date();\n        const lastWeek = new Date(currentDate.getTime() - 7 * 24 * 60 * 60 * 1000);\n        const recentJobs = jobs.filter((job)=>{\n            if (job.datePosted) {\n                const jobDate = new Date(job.datePosted);\n                return jobDate >= lastWeek;\n            }\n            return false;\n        });\n        // Cidades com mais vagas (top 10)\n        const topCities = Object.entries(locationCounts).sort((a, b)=>b[1] - a[1]).slice(0, 10).map(([city, count])=>({\n                city,\n                count\n            }));\n        const stats = {\n            totalJobs,\n            recentJobs: recentJobs.length,\n            categories: standardCategories,\n            allCategories: categoryCounts,\n            topCities,\n            salaryRanges,\n            contractTypes,\n            internalJobs: allJobsData.meta?.internal || 0,\n            externalJobs: allJobsData.meta?.external || 0,\n            sources: allJobsData.meta?.sources || [],\n            lastUpdate: new Date().toISOString(),\n            // Estat√≠sticas formatadas para uso direto no frontend\n            formatted: {\n                totalJobsFormatted: totalJobs.toLocaleString('pt-BR'),\n                recentJobsFormatted: recentJobs.length.toLocaleString('pt-BR'),\n                topCategory: Object.entries(standardCategories).sort((a, b)=>b[1] - a[1])[0],\n                avgJobsPerCategory: Math.round(totalJobs / Object.keys(standardCategories).length)\n            }\n        };\n        console.log(`‚úÖ Estat√≠sticas calculadas: ${totalJobs} vagas totais`);\n        res.status(200).json({\n            success: true,\n            data: stats\n        });\n    } catch (error) {\n        console.error('‚ùå Erro ao calcular estat√≠sticas:', error);\n        res.status(500).json({\n            success: false,\n            message: 'Erro ao calcular estat√≠sticas das vagas',\n            data: {\n                totalJobs: 0,\n                recentJobs: 0,\n                categories: {},\n                error: error.message\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/jobs-stats.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fjobs-stats&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fjobs-stats.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();