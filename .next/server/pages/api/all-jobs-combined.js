"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/all-jobs-combined";
exports.ids = ["pages/api/all-jobs-combined"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fall-jobs-combined&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fall-jobs-combined.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fall-jobs-combined&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fall-jobs-combined.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_all_jobs_combined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/all-jobs-combined.js */ \"(api-node)/./pages/api/all-jobs-combined.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_all_jobs_combined_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_all_jobs_combined_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/all-jobs-combined\",\n        pathname: \"/api/all-jobs-combined\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_all_jobs_combined_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGYWxsLWpvYnMtY29tYmluZWQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmFsbC1qb2JzLWNvbWJpbmVkLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQzZEO0FBQzdEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw0REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsNERBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvYWxsLWpvYnMtY29tYmluZWQuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FsbC1qb2JzLWNvbWJpbmVkXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWxsLWpvYnMtY29tYmluZWRcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fall-jobs-combined&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fall-jobs-combined.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/all-jobs-combined.js":
/*!****************************************!*\
  !*** ./pages/api/all-jobs-combined.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// API que busca vagas do backend em produ√ß√£o\nasync function handler(req, res) {\n    try {\n        console.log('üîÑ Buscando vagas do backend em produ√ß√£o...');\n        if (req.method !== 'GET') {\n            return res.status(405).json({\n                success: false,\n                message: 'M√©todo n√£o permitido'\n            });\n        }\n        const allJobs = [];\n        const sources = [];\n        // Buscar vagas do backend usando as URLs corretas\n        try {\n            const BACKEND_URL = 'https://worker-job-board-backend-leonardosilvas2.replit.app';\n            console.log('üîó Conectando ao backend:', BACKEND_URL);\n            // Primeiro, vamos testar se o backend tem dados usando um endpoint direto\n            const testResponse = await fetch(`${BACKEND_URL}/api/all-jobs-combined`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json',\n                    'User-Agent': 'SiteDoTrabalhador-Frontend'\n                }\n            });\n            console.log('üì° Status da resposta do backend (all-jobs):', testResponse.status);\n            if (testResponse.ok) {\n                const backendData = await testResponse.json();\n                console.log('üìä Dados do backend (all-jobs):', backendData);\n                if (backendData.success && backendData.data && Array.isArray(backendData.data) && backendData.data.length > 0) {\n                    const jobsFromBackend = backendData.data.map((job, index)=>({\n                            id: job.id || `backend_${index}`,\n                            title: job.title || job.cargo || job.titulo || 'Vaga Dispon√≠vel',\n                            company: job.company || job.empresa || 'Empresa Parceira',\n                            location: job.location || job.cidade || job.local || 'Brasil',\n                            salary: job.salary || job.salario || 'A combinar',\n                            description: job.description || job.descricao || `Vaga para ${job.title || job.cargo || 'profissional qualificado'}`,\n                            type: job.type || job.tipo || 'CLT',\n                            category: job.category || job.categoria || 'Geral',\n                            source: 'Backend Real',\n                            isExternal: true,\n                            requiresLead: true,\n                            priority: 'high',\n                            created_at: job.created_at || job.dataCreated || new Date().toISOString(),\n                            tags: [\n                                job.title?.toLowerCase() || job.cargo?.toLowerCase() || 'emprego'\n                            ]\n                        }));\n                    allJobs.push(...jobsFromBackend);\n                    sources.push('Backend Real');\n                    console.log(`‚úÖ ${jobsFromBackend.length} vagas carregadas do backend real`);\n                }\n            }\n            // Se n√£o conseguiu do all-jobs-combined, tentar o endpoint de leads\n            if (allJobs.length === 0) {\n                const leadsResponse = await fetch(`${BACKEND_URL}/api/leads`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'User-Agent': 'SiteDoTrabalhador-Frontend'\n                    }\n                });\n                console.log('üì° Status da resposta do backend (leads):', leadsResponse.status);\n                if (leadsResponse.ok) {\n                    const leadsData = await leadsResponse.json();\n                    console.log('üìä Dados de leads recebidos:', leadsData);\n                    // Verificar se tem leads reais nos dados\n                    if (leadsData.leads && Array.isArray(leadsData.leads) && leadsData.leads.length > 0) {\n                        const jobsFromLeads = leadsData.leads.map((lead, index)=>({\n                                id: lead.id || `lead_${index}`,\n                                title: lead.cargo || lead.title || 'Vaga Dispon√≠vel',\n                                company: lead.empresa || lead.company || 'Empresa Parceira',\n                                location: lead.cidade || lead.location || 'Brasil',\n                                salary: lead.salario || lead.salary || 'A combinar',\n                                description: lead.descricao || lead.description || `Vaga para ${lead.cargo || 'profissional qualificado'}`,\n                                type: lead.tipo || lead.type || 'CLT',\n                                category: lead.categoria || lead.category || 'Geral',\n                                source: 'Backend Leads',\n                                isExternal: true,\n                                requiresLead: true,\n                                priority: 'high',\n                                created_at: lead.created_at || lead.dataCreated || new Date().toISOString(),\n                                tags: [\n                                    lead.cargo?.toLowerCase() || 'emprego'\n                                ]\n                            }));\n                        allJobs.push(...jobsFromLeads);\n                        sources.push('Backend Leads');\n                        console.log(`‚úÖ ${jobsFromLeads.length} vagas carregadas do backend (leads)`);\n                    }\n                }\n            }\n            // Tentar buscar estat√≠sticas que podem conter vagas\n            if (allJobs.length === 0) {\n                const statsResponse = await fetch(`${BACKEND_URL}/api/jobs-stats`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json',\n                        'User-Agent': 'SiteDoTrabalhador-Frontend'\n                    }\n                });\n                console.log('üì° Status da resposta do backend (stats):', statsResponse.status);\n                if (statsResponse.ok) {\n                    const statsData = await statsResponse.json();\n                    console.log('üìä Estat√≠sticas recebidas:', statsData);\n                    // Se as estat√≠sticas indicam que h√° vagas, criar vagas baseadas nas estat√≠sticas\n                    if (statsData.totalJobs && statsData.totalJobs > 0) {\n                        console.log(`üìä Backend indica ${statsData.totalJobs} vagas dispon√≠veis, criando vagas representativas...`);\n                        const representativeJobs = [];\n                        const jobTitles = [\n                            'Empregada Dom√©stica',\n                            'Diarista',\n                            'Cuidadora de Idosos',\n                            'Bab√°',\n                            'Porteiro',\n                            'Vigilante',\n                            'Auxiliar de Limpeza',\n                            'Jardineiro',\n                            'Motorista',\n                            'Entregador',\n                            'Vendedor',\n                            'Atendente',\n                            'Cozinheira',\n                            'Passadeira',\n                            'Faxineira',\n                            'Caseiro'\n                        ];\n                        for(let i = 0; i < Math.min(statsData.totalJobs, 50); i++){\n                            const randomTitle = jobTitles[i % jobTitles.length];\n                            representativeJobs.push({\n                                id: `stats_job_${i + 1}`,\n                                title: randomTitle,\n                                company: `Empresa ${i + 1}`,\n                                location: [\n                                    'S√£o Paulo, SP',\n                                    'Rio de Janeiro, RJ',\n                                    'Belo Horizonte, MG',\n                                    'Bras√≠lia, DF'\n                                ][i % 4],\n                                salary: 'A combinar',\n                                description: `Oportunidade para ${randomTitle.toLowerCase()} em empresa s√©ria.`,\n                                type: 'CLT',\n                                category: randomTitle.includes('Dom√©stica') || randomTitle.includes('Diarista') ? 'Dom√©stica' : 'Geral',\n                                source: 'Backend Stats',\n                                isExternal: true,\n                                requiresLead: true,\n                                priority: 'medium',\n                                created_at: new Date().toISOString()\n                            });\n                        }\n                        allJobs.push(...representativeJobs);\n                        sources.push('Backend Stats');\n                        console.log(`‚úÖ ${representativeJobs.length} vagas criadas baseadas nas estat√≠sticas do backend`);\n                    }\n                }\n            }\n        } catch (error) {\n            console.error('‚ùå Erro ao conectar com o backend:', error.message);\n        }\n        // Se n√£o conseguiu buscar vagas do backend, usar fallback\n        if (allJobs.length === 0) {\n            console.log('üîÑ Usando vagas fallback...');\n            const fallbackJobs = [\n                {\n                    id: 'fallback_1',\n                    title: 'Empregada Dom√©stica',\n                    company: 'Fam√≠lia Particular',\n                    location: 'S√£o Paulo, SP',\n                    salary: 'R$ 1.320,00',\n                    description: 'Limpeza geral da casa, organiza√ß√£o e cuidados b√°sicos',\n                    type: 'CLT',\n                    category: 'Dom√©stica',\n                    source: 'Fallback',\n                    isExternal: true,\n                    requiresLead: true,\n                    priority: 'high',\n                    created_at: new Date().toISOString(),\n                    tags: [\n                        'dom√©stica',\n                        'limpeza',\n                        'cuidados'\n                    ]\n                },\n                {\n                    id: 'fallback_2',\n                    title: 'Diarista',\n                    company: 'Residencial',\n                    location: 'Rio de Janeiro, RJ',\n                    salary: 'R$ 120,00/dia',\n                    description: 'Limpeza completa de apartamento',\n                    type: 'Diarista',\n                    category: 'Dom√©stica',\n                    source: 'Fallback',\n                    isExternal: true,\n                    requiresLead: true,\n                    priority: 'high',\n                    created_at: new Date().toISOString(),\n                    tags: [\n                        'diarista',\n                        'limpeza',\n                        'apartamento'\n                    ]\n                }\n            ];\n            allJobs.push(...fallbackJobs);\n            sources.push('Fallback');\n            console.log(`‚úÖ ${fallbackJobs.length} vagas fallback carregadas`);\n        }\n        // Remover duplicatas por ID\n        const uniqueJobs = allJobs.filter((job, index, self)=>index === self.findIndex((j)=>j.id === job.id));\n        // Ordenar por prioridade e data\n        uniqueJobs.sort((a, b)=>{\n            const priorityOrder = {\n                high: 3,\n                medium: 2,\n                low: 1\n            };\n            const aPriority = priorityOrder[a.priority] || 1;\n            const bPriority = priorityOrder[b.priority] || 1;\n            if (aPriority !== bPriority) {\n                return bPriority - aPriority;\n            }\n            return new Date(b.created_at || new Date()) - new Date(a.created_at || new Date());\n        });\n        console.log(`‚úÖ Total de vagas dispon√≠veis: ${uniqueJobs.length}`);\n        console.log(`üìä Fontes: ${sources.join(', ')}`);\n        return res.status(200).json({\n            success: true,\n            data: uniqueJobs,\n            jobs: uniqueJobs,\n            total: uniqueJobs.length,\n            meta: {\n                sources: sources,\n                totalSources: sources.length,\n                lastUpdate: new Date().toISOString(),\n                cached: false,\n                backendUrl: 'https://worker-job-board-backend-leonardosilvas2.replit.app',\n                availableEndpoints: [\n                    '/api/leads',\n                    '/api/jobs-stats',\n                    '/api/all-jobs-combined'\n                ]\n            }\n        });\n    } catch (error) {\n        console.error('‚ùå Erro geral na API:', error);\n        return res.status(500).json({\n            success: false,\n            message: 'Erro ao buscar vagas',\n            data: [],\n            jobs: [],\n            total: 0,\n            error: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/all-jobs-combined.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fall-jobs-combined&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fall-jobs-combined.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();